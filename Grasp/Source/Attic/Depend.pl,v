head	2.3;
access;
symbols
	PreMonaco:2.3
	cjkimme_version:2.2.0.2;
locks; strict;
comment	@# @;


2.3
date	2004.02.12.00.13.00;	author athomps;	state dead;
branches;
next	2.2;

2.2
date	2004.01.09.19.01.07;	author athomps;	state Exp;
branches
	2.2.2.1;
next	2.1;

2.1
date	2003.06.17.19.08.11;	author athomps;	state Exp;
branches;
next	2.0;

2.0
date	2003.04.24.17.19.15;	author athomps;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.08.23.25.53;	author athomps;	state Exp;
branches;
next	;

2.2.2.1
date	2004.09.13.23.00.09;	author cjkimme;	state dead;
branches;
next	;


desc
@@


2.3
log
@This update is an excercise in housekeeping.
I remove all of the DEBUG ifdefs.
I added a flag to class Comm which by default
points nodefile to /dev/null.
Finally, I redid the Makefile to enable
multi-architecture builds on a single machine.
This last one will require an update to Documentation.
@
text
@#!/usr/bin/perl
#-----------------------------------------------------------------------
#
#   G R A S P
#   ____________
#   \           \
#    \ General   \
#     \ Reactive  \
#      \ Atomistic \
#       \ Simulation\
#        \ Program   \
#         \___________\
#
#    Timestamp: 8 January 2004
#
#    Author: Aidan P. Thompson
#
#    e-mail: athomps@@sandia.gov
#   
#    Copyright (2004) Sandia National Laboratories
#   
#    Sandia is a multiprogram laboratory operated by 
#    Sandia Corporation, a Lockheed Martin company,
#    for the United States Department of Energy under contract
#    No. DE-AC04-94AL-85000.
#
#------------------------------------------------------------------------ 
#///:EOH~

# Syntax: Depend.pl files  (*.*)

# Modified from dependency generator for f90 modules by Steve Plimpton

# designed to be called from a master Makefile
# searches each file for lines of form:  
#   #include "filename.h"
# takes all found filenames and converts it into string of form:
#   file.o: file.cpp filename1.o filename2.o ...
# writes that string into Makefile.depend
# end result is Makefile.depend with all dependencies for all .cpp files

if (@@ARGV == 0) {
    print "Syntax: Depend.pl files\n";
    exit;
}

open(MAKE,">Makefile.depend");

foreach $file (@@ARGV) {

    # slurp entire file into @@lines

    open(FILE,$file) || die "Could not open file $file\n";
    @@lines = <FILE>;
    close(FILE);

    # extract all include file names of form '#include "filename"'

    @@modules = ();
    foreach (@@lines) {
	if (/^\s*#include\s*\ \"(\w*)\s*/) {push (@@modules, $1)}
    }

    # delete duplicate file names in @@module
    # from Perl Cookbook, p 102, ++ operator adds unseen to hash

    %seen = ();
    @@unique = ();
    foreach $module (@@modules) {
	push (@@unique, $module) unless $seen{$module}++;
    }

    # delete occurences of mpi and other include files
    # that are external to the source distribution.

    @@uniqueclean = ();
    foreach $module (@@unique) {
	push (@@uniqueclean, $module) unless 
	    ($module eq "mpi" || $module eq "mpif");
    }

    # write one-line dependency string into Makefile.depend

    $file =~ s/\.cpp//;
    print MAKE "$file.o:\t";
    print MAKE "$file.cpp ";
    foreach $module (@@uniqueclean) {print MAKE "$module.h ";};
    print MAKE "\n";
}
@


2.2
log
@Added a Perl script to Header.pl to prepend a header contained in
header.txt to source fiels, using

Header.pl *.pl *.cpp *.h M*[^~]
@
text
@@


2.2.2.1
log
@Committing merge of main trunk onto branch cjkimme_version.
@
text
@@


2.1
log
@This is a lot of stuff.  Basically, the code is now parallel,
but it is only tested for the force field twobody_lj_cut.

The parallelization scheme is based on Steve Plimptons Comm class.
@
text
@d2 27
@


2.0
log
@*** empty log message ***
@
text
@d30 1
a30 1
    # extract all module names of form "USE module" or "use module"
d34 1
a34 1
	if (/^\s*#include\ \"(\w*)\s*/) {push (@@modules, $1)}
d37 1
a37 1
    # delete duplicate module names in @@module
d46 9
d60 1
a60 1
    foreach $module (@@unique) {print MAKE "$module.h ";};
@


1.1
log
@Starting source distribution for Grasp.
Basic molecular dynamics code with twobody interactions
@
text
@@

