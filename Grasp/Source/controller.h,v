head	4.3;
access;
symbols
	ReverseComm_branch:4.3.0.8
	ADTools_branch:4.3.0.6
	Monaco_Aidan:4.3.2.1.0.2
	Root-of-Monaco_Aidan:4.3.2.1
	PPPM_Crozier2:4.3.0.4
	PPPM_Crozier:4.3
	Root-of-PPPM_Crozier:4.3
	Monaco:4.3.0.2
	PreMonaco:4.3
	Recovery-2004-04-12:4.0
	BRANCH:4.1.0.4
	PMONACO:4.1.0.2
	ROOT:4.1
	initial:4.0.0.2
	pmonaco:4.0
	Version_4_0:4.0
	Version_3_0:3.0
	BeforeREAXMerge:3.1
	REAX-2:3.1
	P_MonacoSource:3.1.0.6
	GraspSource:3.1
	P_Monaco:3.1.0.4
	InitialGrasp:3.1
	REAXFF:3.1.0.2
	premerge_cjkimme_version:3.0
	CRAY:2.9.0.2
	cjkimme_version_merge_from_trunk_1:2.6.2.2
	cjkimme_version:2.6.0.2;
locks; strict;
comment	@ * @;


4.3
date	2005.05.03.16.28.27;	author athomps;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	2005.05.02.20.13.38;	author athomps;	state Exp;
branches;
next	4.1;

4.1
date	2005.04.12.22.26.04;	author saubry;	state Exp;
branches;
next	4.0;

4.0
date	2005.04.05.16.43.30;	author athomps;	state Exp;
branches;
next	3.2;

3.2
date	2005.04.02.00.37.56;	author athomps;	state Exp;
branches;
next	3.1;

3.1
date	2004.10.22.22.30.16;	author cjkimme;	state Exp;
branches
	3.1.6.1;
next	3.0;

3.0
date	2004.09.22.17.56.49;	author athomps;	state Exp;
branches;
next	2.9;

2.9
date	2004.07.26.15.52.18;	author athomps;	state Exp;
branches;
next	2.8;

2.8
date	2004.07.22.20.52.32;	author athomps;	state Exp;
branches;
next	2.7;

2.7
date	2004.03.20.00.15.37;	author athomps;	state Exp;
branches;
next	2.6;

2.6
date	2004.01.09.19.01.08;	author athomps;	state Exp;
branches
	2.6.2.1;
next	2.5;

2.5
date	2003.11.26.22.51.14;	author athomps;	state Exp;
branches;
next	2.4;

2.4
date	2003.10.31.20.20.43;	author athomps;	state Exp;
branches;
next	2.3;

2.3
date	2003.10.04.02.46.52;	author athomps;	state Exp;
branches;
next	2.2;

2.2
date	2003.07.22.22.27.41;	author athomps;	state Exp;
branches;
next	2.1;

2.1
date	2003.06.17.19.08.11;	author athomps;	state Exp;
branches;
next	2.0;

2.0
date	2003.04.24.17.19.15;	author athomps;	state Exp;
branches;
next	;

2.6.2.1
date	2004.09.09.21.01.42;	author cjkimme;	state Exp;
branches;
next	2.6.2.2;

2.6.2.2
date	2004.09.13.23.00.09;	author cjkimme;	state Exp;
branches;
next	;

3.1.6.1
date	2005.02.17.21.41.38;	author saubry;	state Exp;
branches;
next	3.1.6.2;

3.1.6.2
date	2005.03.01.19.00.53;	author saubry;	state Exp;
branches;
next	3.1.6.3;

3.1.6.3
date	2005.04.07.00.04.52;	author saubry;	state Exp;
branches;
next	;

4.3.2.1
date	2005.05.03.21.44.53;	author athomps;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Fixed glitch in header.
@
text
@//-----------------------------------------------------------------------
//
//   G R A S P
//   ____________
//   \           \
//    \ General   \
//     \ Reactive  \
//      \ Atomistic \
//       \ Simulation\
//        \ Program   \
//         \___________\
//
//    Timestamp: April 1, 2005
//    Version: 4.0
//
//    Primary Author: Aidan P. Thompson
//
//    e-mail: athomps@@sandia.gov
//   
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
//    for the United States Department of Energy under contract
//    No. DE-AC04-94AL-85000.
//
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
//----------------------------------------------------------------------- 
/////:EOH~

#ifndef CONTROLLER_H
#define CONTROLLER_H

class Controller {
 public: 
  // enum class for run modes
  enum RunModes {run_dynamics,run_relax,run_interfacial_minimizer,run_conjugate_gradient,run_grain_boundary_minimizer};
 private:
  RunModes run_mode;
  Input* inp;
  Stepper* stepper;
  Minimizer* minimizer;
  Box* b;
  ParticleTypeList* t;
  ParticleList* p;
  ForceFieldList* ff;
  Output* outp;
  Comm* comm;
  FixList* fix_list;
  string input_string_minimizer;
  string input_string_temp_control;
  string input_string_units_style;
  double timestep;
  int nsteps;
  time_t time_begin,time_end;
 public:
  Controller(int&, char**, const bool&, const bool&);
  ~Controller();
  void Setup();
  void Run();
  void Finish();
  void input_minimize(const string&, const RunModes&);
  void input_timestep(const string&);
  void input_nsteps(const string&);
  void input_units(const string& buf);
};

#endif
@


4.3.2.1
log
@First commit of new Monaco branch
@
text
@d52 1
a52 1
  enum RunModes {run_dynamics,run_monte_carlo,run_relax,run_interfacial_minimizer,run_conjugate_gradient,run_grain_boundary_minimizer};
a64 1
  MonteCarlo *montecarlo;
a65 1
  string input_string_mc;
a77 1
  void input_mc(const string&, const RunModes&);
@


4.2
log
@Recovered from corruption on April 12, 1005
@
text
@d43 1
a43 1
//------------------------------------------------------------------------ 
@


4.1
log
@Create new branch.
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
d52 1
a52 1
  enum RunModes {run_dynamics,run_monte_carlo,run_relax,run_interfacial_minimizer,run_conjugate_gradient,run_grain_boundary_minimizer};
a64 1
  MonteCarlo *montecarlo;
a65 1
  string input_string_mc;
a77 1
  void input_mc(const string&, const RunModes&);
@


4.0
log
@This is version 4.0
@
text
@d13 2
a14 2
//    Timestamp: April 1, 2005
//    Version: 4.0
d16 1
a16 1
//    Primary Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
a26 16
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
d36 1
a36 1
  enum RunModes {run_dynamics,run_relax,run_interfacial_minimizer,run_conjugate_gradient,run_grain_boundary_minimizer};
d49 1
d51 1
d64 1
@


3.2
log
@Merged REAX version with main version
@
text
@d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


3.1
log
@Merging branch cjkimme_version with the trunk. testh and testi are kind
of questionable, but everything else looks ok.
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
@


3.1.6.1
log
@Implement energy change.
Two ways are implemented:
     -  brute force,
     -  removal of the energy of atom before being boosted
        and addition of the energy of the boosted atoms.
Brute force is for every force field. Other method is for EAM only for now.


Sylvie Aubry - 02-17-05
@
text
@a29 2
// Modified saubry (01-13-05)

d36 1
a36 2
  enum RunModes {run_dynamics,run_relax,run_interfacial_minimizer,run_conjugate_gradient,
                 run_grain_boundary_minimizer,run_p_monaco};
a41 1
  MonteCarlo* montecarlo;
a61 1
  void input_p_monaco(const RunModes&);
@


3.1.6.2
log
@Add move class.

Sylvie Aubry (03-01-05).
@
text
@a45 1

a49 1

a52 1

@


3.1.6.3
log
@Fusion of ALex and Sylvie's versions.
Implementation of bins.
Add energy change.

saubry (04-06-05)
@
text
@d30 2
d38 2
a39 1
  enum RunModes {run_dynamics,run_monte_carlo,run_relax,run_interfacial_minimizer,run_conjugate_gradient,run_grain_boundary_minimizer};
d45 2
d51 1
d55 1
a55 1
  MonteCarlo *montecarlo;
a56 1
  string input_string_mc;
d69 1
a69 1
  void input_mc(const string&, const RunModes&);
@


3.0
log
@Created a new version number, GRASP 3.0
@
text
@d36 1
a36 1
  enum RunModes {run_dynamics,run_relax};
d61 1
a61 1
  void input_minimize(const string&);
@


2.9
log
@Updated header
@
text
@d13 2
a14 1
//    Timestamp: July 26, 2004
@


2.8
log
@Added status messages and timing info to controller.cpp
@
text
@d13 1
a13 1
//    Timestamp: 1 March 2004
@


2.7
log
@Various
@
text
@d53 1
@


2.6
log
@Added a Perl script to Header.pl to prepend a header contained in
header.txt to source fiels, using

Header.pl *.pl *.cpp *.h M*[^~]
@
text
@d13 1
a13 1
//    Timestamp: 8 January 2004
@


2.6.2.1
log
@Committing changes to branch cjkimme_version before trying to merge changes
to the main branch onto branch cjkimme_version. Adding classes
for conjugate_gradient minimization along with two derived classes. One
is interfacial_minimizer which minimizes with respect to rigid translations
of groups of atoms. The other is grain_boundary_minimizer which minimizes
the zero temperature energy of a grain boundary allowing interlayer relaxation normal to the gb.
@
text
@d35 1
a35 1
  enum RunModes {run_dynamics,run_relax,run_interfacial_minimizer,run_conjugate_gradient,run_grain_boundary_minimizer};
d59 1
a59 1
  void input_minimize(const string&, const RunModes&);
@


2.6.2.2
log
@Committing merge of main trunk onto branch cjkimme_version.
@
text
@d13 1
a13 1
//    Timestamp: July 26, 2004
a52 1
  time_t time_begin,time_end;
@


2.5
log
@Gutted the class Input, so that it is now a generic wrapper.
All the detailed treatment of each command is pushed down into
the relevant classes.
@
text
@d1 28
@


2.4
log
@Removed Thermo class
@
text
@d20 5
d26 1
a26 1
  Controller(int&, char**);
d31 4
@


2.3
log
@Fized up the output a little mor.
Standardized the method for treating enum option lists
Created the Constants class
@
text
@a16 1
  Thermo* thermo;
d19 1
a19 1
  
@


2.2
log
@Improved treament of log and error messages using new class Log.
Added minimization class Minimizer (currently only steepest descent).
Implemented Nsq neighboring for threebody forcefields.
Reinstated density profiles.
@
text
@d6 2
a7 1
  enum run_modes {run_dynamics,run_relax};
d9 1
a9 1
  int run_mode;
@


2.1
log
@This is a lot of stuff.  Basically, the code is now parallel,
but it is only tested for the force field twobody_lj_cut.

The parallelization scheme is based on Steve Plimptons Comm class.
@
text
@d5 2
d8 1
d11 1
d19 1
@


2.0
log
@*** empty log message ***
@
text
@a3 2
#include "grasp.h"

d14 1
d16 1
a16 1
  Controller();
@

