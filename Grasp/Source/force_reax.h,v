head	4.8;
access;
symbols
	ReverseComm_branch:4.3.0.4
	ADTools_branch:4.3.0.2
	Monaco_Aidan:4.1.0.4
	Root-of-Monaco_Aidan:4.1
	PPPM_Crozier2:4.2.0.2
	PPPM_Crozier:4.2
	Root-of-PPPM_Crozier:4.2
	Monaco:4.1.0.2
	PreMonaco:4.1
	Recovery-2004-04-12:4.0
	BRANCH:4.0.0.6
	PMONACO:4.0.0.4
	ROOT:4.0
	initial:4.0.0.2
	pmonaco:4.0
	Version_4_0:4.0
	REAX-2:3.2.2.5
	REAXFF:3.2.0.2;
locks; strict;
comment	@ * @;


4.8
date	2007.09.09.20.58.36;	author athomps;	state Exp;
branches;
next	4.7;

4.7
date	2007.09.05.22.43.34;	author athomps;	state Exp;
branches;
next	4.6;

4.6
date	2007.06.02.03.27.21;	author athomps;	state Exp;
branches;
next	4.5;

4.5
date	2007.05.30.05.41.46;	author athomps;	state Exp;
branches;
next	4.4;

4.4
date	2006.11.09.20.13.52;	author athomps;	state Exp;
branches;
next	4.3;

4.3
date	2006.04.05.22.52.02;	author athomps;	state Exp;
branches
	4.3.4.1;
next	4.2;

4.2
date	2005.06.08.20.08.48;	author athomps;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	2005.05.03.16.28.27;	author athomps;	state Exp;
branches
	4.1.4.1;
next	4.0;

4.0
date	2005.04.05.16.43.30;	author athomps;	state Exp;
branches;
next	3.3;

3.3
date	2005.04.02.00.37.56;	author athomps;	state Exp;
branches;
next	3.2;

3.2
date	2004.12.16.23.40.44;	author athomps;	state dead;
branches
	3.2.2.1;
next	3.1;

3.1
date	2004.12.16.23.07.39;	author athomps;	state Exp;
branches;
next	;

3.2.2.1
date	2004.12.16.23.59.24;	author athomps;	state Exp;
branches;
next	3.2.2.2;

3.2.2.2
date	2004.12.22.22.59.07;	author athomps;	state Exp;
branches;
next	3.2.2.3;

3.2.2.3
date	2005.01.07.22.51.01;	author athomps;	state Exp;
branches;
next	3.2.2.4;

3.2.2.4
date	2005.01.16.21.56.05;	author athomps;	state Exp;
branches;
next	3.2.2.5;

3.2.2.5
date	2005.02.09.07.14.57;	author athomps;	state Exp;
branches;
next	;

4.1.4.1
date	2005.10.21.15.44.43;	author saubry;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	2006.02.15.21.34.48;	author athomps;	state Exp;
branches;
next	;

4.2.2.1
date	2005.06.20.22.41.00;	author athomps;	state Exp;
branches;
next	4.2.2.2;

4.2.2.2
date	2005.06.21.21.46.18;	author pscrozi;	state Exp;
branches;
next	;

4.3.4.1
date	2006.11.08.04.18.38;	author athomps;	state Exp;
branches;
next	4.3.4.2;

4.3.4.2
date	2006.11.09.00.20.53;	author athomps;	state Exp;
branches;
next	;


desc
@@


4.8
log
@Fixed problem with hbonds in ReaxFF implementation. Now matches pre-midpoint results
@
text
@//-----------------------------------------------------------------------
//
//   G R A S P
//   ____________
//   \           \
//    \ General   \
//     \ Reactive  \
//      \ Atomistic \
//       \ Simulation\
//        \ Program   \
//         \___________\
//
//    Timestamp: April 1, 2005
//    Version: 4.0
//
//    Primary Author: Aidan P. Thompson
//
//    e-mail: athomps@@sandia.gov
//   
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
//    for the United States Department of Energy under contract
//    No. DE-AC04-94AL-85000.
//
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
//----------------------------------------------------------------------- 
/////:EOH~

#ifndef FORCE_REAX_H
#define FORCE_REAX_H

class Particle_Types;
class Box;

class Force_Reax: public ForceField {
 public:
  enum ForceFieldTypes {  };
 private:
  bool Lcoul;
  double rcutvsq,rcutbsq,rcutvbsq;
  bool Lmidpoint;
  int iprune,ihb;
  double hbcut,swb;
 public:

  Force_Reax(const string);
  ~Force_Reax();
  void SetupCutNeighSq(const double&, Comm*);

  void ApplyForce(const bool&, const bool&, const bool&, 
		  ParticleList*, 
		  const Box*, Comm*);
  void ReadInteractions(Comm*);
  void SetupInteractions(const Box*, const double&, Comm*);
  void SetupNeighbor(const string&, const int&,const double&, 
                        double&, double&, const Box*, Comm*);
  void SetupTypes(const ParticleTypeList*);
  void WriteReaxPositions(ParticleList*, Comm*) const;
  void ReadReaxForces(ParticleList*, Comm*);
  void ReadReaxAtomVirial(ParticleList*, Comm*);
  void WriteReaxVlist(ParticleList*, const Box*, Comm*) const;
  void CheckParams() const;
  void OutputReaxSizes(Comm* comm) const;
  void set_iprune(const int);
  void set_ihb(const int);
  void set_hbcut(const double);
  void set_Lmidpoint(const bool&);

};

#endif

@


4.7
log
@Fixed midpoint bug and eliminated all osx_serial_debug warnings (-Wuninitialized, -Wshadow, ...)
@
text
@d60 1
a60 1
  double hbcut;
@


4.6
log
@Added commands to control midpoint rule, iprune, ihb and hbcut
@
text
@d84 1
a84 1
  void set_Lmidpoint(const bool);
@


4.5
log
@Implemented midpoint method for ReaxFF
@
text
@d58 3
d81 5
@


4.4
log
@Merged ReverseComm_branch back into main branch
@
text
@d70 1
a70 1
                        double&, const Box*, Comm*);
d75 1
a75 1
  void WriteReaxVlist(ParticleList*, Comm*) const;
@


4.3
log
@Added Force_Reax::OutputReaxSizes()
@
text
@d64 2
a65 1
  void ApplyForce(const bool&, const bool&, ParticleList*, 
d74 1
@


4.3.4.1
log
@Added atom stress for ReaxFF
@
text
@a72 1
  void ReadReaxAtomVirial(ParticleList*, Comm*);
@


4.3.4.2
log
@Finished adding atomic virial for ReaxFF force field
@
text
@d64 1
a64 2
  void ApplyForce(const bool&, const bool&, const bool&, 
		  ParticleList*, 
@


4.2
log
@Added prototype for Force_PPPM class
@
text
@d75 1
@


4.2.2.1
log
@Added ParticleList to ForceField::SetupInterations()
@
text
@d67 1
a67 1
  void SetupInteractions(const ParticleList*, const Box*, const double&, Comm*);
@


4.2.2.2
log
@Latest PPPM version
@
text
@d65 1
a65 1
		  const Box*, double&, Comm*);
d67 1
a67 1
  void SetupInteractions(ParticleList*, const Box*, double&, Comm*);
@


4.1
log
@Fixed glitch in header.
@
text
@d67 1
a67 1
  void SetupInteractions(const Box*, const Force_Ewald*, Comm*);
@


4.1.4.1
log
@Correct a few things.
@
text
@a65 3
  void EnergyChange(int* , double [3],
		    const bool&, ParticleList*, 
		    const Box*, Comm*);
@


4.1.4.2
log
@Improved performance of MC moves and turned on periodic output
@
text
@d66 3
@


4.0
log
@This is version 4.0
@
text
@d43 1
a43 1
//------------------------------------------------------------------------ 
@


3.3
log
@Merged REAX version with main version
@
text
@d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


3.2
log
@Removed files inadvertently added to main branch
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
d41 1
a41 1
  double rcutvsq,rcutbsq;
a49 1

d58 1
@


3.2.2.1
log
@I hope this is adds all the REAX files to the REAXFF branch
@
text
@@


3.2.2.2
log
@Completed prototype of parallel ReaxFF in GRASP, including charge equilibration
@
text
@a49 1
  void ComputeCharges(ParticleList*, Comm*);
@


3.2.2.3
log
@Finished optimized implementation of ReaxFF.
Eliminates O(N^2) scaling of srttor and srtang.
Also blanks out the ghost bonds that are not in dihedral
with local atom.
@
text
@d41 1
a41 1
  double rcutvsq,rcutbsq,rcutvbsq;
@


3.2.2.4
log
@Separated charge equilibration part of REAXFF into separate force field.
@
text
@d50 2
@


3.2.2.5
log
@Added some error checking and some memory efficiency.
@
text
@a57 1
  void CheckParams() const;
@


3.1
log
@Finally, this is the REAXFF branch, first pass
@
text
@@

