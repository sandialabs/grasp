head	4.4;
access;
symbols
	ReverseComm_branch:4.4.0.4
	ADTools_branch:4.4.0.2
	Monaco_Aidan:4.3.0.6
	Root-of-Monaco_Aidan:4.3
	PPPM_Crozier2:4.3.0.4
	PPPM_Crozier:4.3
	Root-of-PPPM_Crozier:4.3
	Monaco:4.3.0.2
	PreMonaco:4.3
	Recovery-2004-04-12:4.0
	BRANCH:4.1.0.4
	PMONACO:4.1.0.2
	ROOT:4.1
	initial:4.0.0.2
	pmonaco:4.0
	Version_4_0:4.0
	Version_3_0:3.0
	BeforeREAXMerge:3.1
	REAX-2:3.1
	P_MonacoSource:3.1.0.6
	GraspSource:3.1
	P_Monaco:3.1.0.4
	InitialGrasp:3.1
	REAXFF:3.1.0.2
	premerge_cjkimme_version:3.0
	CRAY:2.11.0.2
	cjkimme_version_merge_from_trunk_1:2.9.2.2
	cjkimme_version:2.9.0.2;
locks; strict;
comment	@ * @;


4.4
date	2006.01.25.21.40.12;	author athomps;	state Exp;
branches;
next	4.3;

4.3
date	2005.05.03.16.28.27;	author athomps;	state Exp;
branches;
next	4.2;

4.2
date	2005.05.02.20.13.38;	author athomps;	state Exp;
branches;
next	4.1;

4.1
date	2005.04.12.22.26.04;	author saubry;	state Exp;
branches;
next	4.0;

4.0
date	2005.04.05.16.43.30;	author athomps;	state Exp;
branches;
next	3.2;

3.2
date	2005.04.02.00.37.56;	author athomps;	state Exp;
branches;
next	3.1;

3.1
date	2004.10.22.22.30.16;	author cjkimme;	state Exp;
branches;
next	3.0;

3.0
date	2004.09.22.17.56.49;	author athomps;	state Exp;
branches;
next	2.11;

2.11
date	2004.07.26.15.52.18;	author athomps;	state Exp;
branches;
next	2.10;

2.10
date	2004.03.20.00.15.38;	author athomps;	state Exp;
branches;
next	2.9;

2.9
date	2004.01.09.19.01.08;	author athomps;	state Exp;
branches
	2.9.2.1;
next	2.8;

2.8
date	2003.11.26.22.51.14;	author athomps;	state Exp;
branches;
next	2.7;

2.7
date	2003.11.03.23.52.04;	author athomps;	state Exp;
branches;
next	2.6;

2.6
date	2003.10.31.20.20.43;	author athomps;	state Exp;
branches;
next	2.5;

2.5
date	2003.10.20.22.05.45;	author athomps;	state Exp;
branches;
next	2.4;

2.4
date	2003.10.04.02.46.53;	author athomps;	state Exp;
branches;
next	2.3;

2.3
date	2003.09.19.23.35.18;	author athomps;	state Exp;
branches;
next	2.2;

2.2
date	2003.07.22.22.27.41;	author athomps;	state Exp;
branches;
next	2.1;

2.1
date	2003.06.17.19.08.11;	author athomps;	state Exp;
branches;
next	2.0;

2.0
date	2003.04.24.17.19.15;	author athomps;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.17.17.14.18;	author athomps;	state Exp;
branches;
next	;

2.9.2.1
date	2004.02.18.01.12.40;	author cjkimme;	state Exp;
branches;
next	2.9.2.2;

2.9.2.2
date	2004.09.13.23.00.09;	author cjkimme;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Added multiple replica feature.
@
text
@//-----------------------------------------------------------------------
//
//   G R A S P
//   ____________
//   \           \
//    \ General   \
//     \ Reactive  \
//      \ Atomistic \
//       \ Simulation\
//        \ Program   \
//         \___________\
//
//    Timestamp: April 1, 2005
//    Version: 4.0
//
//    Primary Author: Aidan P. Thompson
//
//    e-mail: athomps@@sandia.gov
//   
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
//    for the United States Department of Energy under contract
//    No. DE-AC04-94AL-85000.
//
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
//----------------------------------------------------------------------- 
/////:EOH~

#ifndef INPUT_H
#define INPUT_H

class Input
{
 public:
 private:

 public:
  // Default constructor
  Input(char *inpFileName);
  void ReadInput(Controller*,Stepper*,Box*,ParticleList*,Output*,
		 ForceFieldList*, FixList*,Comm*);

 private:
  string defFileName;
  bool Lworldinpfile;
};
#endif

@


4.3
log
@Fixed glitch in header.
@
text
@d62 1
@


4.2
log
@Recovered from corruption on April 12, 1005
@
text
@d43 1
a43 1
//------------------------------------------------------------------------ 
@


4.1
log
@Create new branch.
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


4.0
log
@This is version 4.0
@
text
@d13 2
a14 2
//    Timestamp: April 1, 2005
//    Version: 4.0
d16 1
a16 1
//    Primary Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
a26 16
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
@


3.2
log
@Merged REAX version with main version
@
text
@d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


3.1
log
@Merging branch cjkimme_version with the trunk. testh and testi are kind
of questionable, but everything else looks ok.
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
@


3.0
log
@Created a new version number, GRASP 3.0
@
text
@d40 1
a40 1
  Input();
d43 3
@


2.11
log
@Updated header
@
text
@d13 2
a14 1
//    Timestamp: July 26, 2004
@


2.10
log
@Various
@
text
@d13 1
a13 1
//    Timestamp: 1 March 2004
@


2.9
log
@Added a Perl script to Header.pl to prepend a header contained in
header.txt to source fiels, using

Header.pl *.pl *.cpp *.h M*[^~]
@
text
@d13 1
a13 1
//    Timestamp: 8 January 2004
@


2.9.2.1
log
@Adding read in of initial configuration from arbitrary filename with "read atoms
<filename>". Adding read in of initial velocities with "read velocities <filename>"
command and "dumpfile root <prefix>" command to change the default prefix for output
files. #ifdefs are around output to nodefiles.
@
text
@d39 1
a39 1
  Input(char *inpFileName);
a41 3

 private:
  string defFileName;
@


2.9.2.2
log
@Committing merge of main trunk onto branch cjkimme_version.
@
text
@d13 1
a13 1
//    Timestamp: July 26, 2004
@


2.8
log
@Gutted the class Input, so that it is now a generic wrapper.
All the detailed treatment of each command is pushed down into
the relevant classes.
@
text
@d1 28
@


2.7
log
@Pushed examples down into subdirectories.
@
text
@a6 19
  vector<string> ff_classname_list;
  vector<string> ff_filename_list;
  vector<string> ff_label_list;
  vector<string> fix_style_list;
  vector<string> fix_string_list;
  double timestep,lva[3],lvb[3],lvc[3],origin[3];
  double temp_init;
  int nsteps;
  int temp_iseed;
  int density_freq,density_iaxis,density_nbins;
  int neighbor_freq,thermo_freq,dump_freq,dumpvel_freq,temp_freq;
  int dumpforce_freq, dumpcfg_freq;
  string units_style,temp_control_style,neighbor_style;
  string run_mode,minimize_style;
  bool Ldensity_profile,Lthermo,Ldump,Ldumpvel,Ldumpforce,Ldumpcfg;
  double neighbor_rskin,temp_target,temp_rescale_limit,temp_tau;
  double nose_hoover_freq;
  double temp_factor,temp_window;
  bool relax_coord[3];
d12 2
a13 20
  void ReadInput(Comm*);
  void input_forcefield_twobody(const string& buf);
  void input_forcefield_threebody(const string& buf);
  void input_forcefield_external(const string& buf);
  void input_timestep(const string& buf);
  void input_nsteps(const string& buf);
  void input_box_dimensions(const string& buf);
  void input_box_origin(const string& buf);
  void input_initialize_temperature(const string& buf);
  void input_density_profile(const string& buf);
  void input_neighbor(const string& buf);
  void input_thermo(const string& buf);
  void input_dump_particles(const string& buf);
  void input_dump_velocities(const string& buf);
  void input_dump_forces(const string& buf);
  void input_dump_cfg(const string& buf);
  void input_units(const string&);
  void input_temperature_control(const string&);
  void input_minimize(const string&);
  void input_fix(const string &);
@


2.6
log
@Removed Thermo class
@
text
@d43 1
a43 1
  void input_dump_atoms(const string& buf);
@


2.5
log
@Cleaned up various things, especially treatment of constants
and input strings.
@
text
@d10 2
d50 1
@


2.4
log
@Fized up the output a little mor.
Standardized the method for treating enum option lists
Created the Constants class
@
text
@d16 1
a16 1
  int dumpforce_freq;
d19 1
a19 1
  bool Ldensity_profile,Lthermo,Ldump,Ldumpvel,Ldumpforce;
d21 1
d44 1
@


2.3
log
@Reworked a lot of the output to make it cleaner and more consistent.
Improved the timers.
@
text
@d7 1
a7 1
  vector<int> ff_classname_list;
d17 2
a18 3
  int units_style,temp_control_style,neighbor_style;
  int run_mode;
  int minimize_style;
@


2.2
log
@Improved treament of log and error messages using new class Log.
Added minimization class Minimizer (currently only steepest descent).
Implemented Nsq neighboring for threebody forcefields.
Reinstated density profiles.
@
text
@d9 1
@


2.1
log
@This is a lot of stuff.  Basically, the code is now parallel,
but it is only tested for the force field twobody_lj_cut.

The parallelization scheme is based on Steve Plimptons Comm class.
@
text
@d17 2
d22 1
a22 1

d45 1
a45 1
  //  void input_(const string& buf);
@


2.0
log
@*** empty log message ***
@
text
@d15 1
d17 1
a17 1
  bool Ldensity_profile,Lthermo,Ldump,Ldumpvel;
d26 1
a26 1
  void ReadInput();
d40 1
@


1.1
log
@Added class Profile to measure different types of spatial profiles
Added class Input to handle input commands.
Added global functions input_string to parse input commands.
@
text
@@

