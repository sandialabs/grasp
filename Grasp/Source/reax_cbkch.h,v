head	4.1;
access;
symbols
	ReverseComm_branch:4.1.0.10
	ADTools_branch:4.1.0.8
	Monaco_Aidan:4.1.0.6
	Root-of-Monaco_Aidan:4.1
	PPPM_Crozier2:4.1.0.4
	PPPM_Crozier:4.1
	Root-of-PPPM_Crozier:4.1
	Monaco:4.1.0.2
	PreMonaco:4.1
	Recovery-2004-04-12:4.0
	BRANCH:4.0.0.6
	PMONACO:4.0.0.4
	ROOT:4.0
	initial:4.0.0.2
	pmonaco:4.0
	Version_4_0:4.0
	REAX-2:3.2.2.6
	REAXFF:3.2.0.2;
locks; strict;
comment	@ * @;


4.1
date	2005.05.03.16.28.27;	author athomps;	state Exp;
branches;
next	4.0;

4.0
date	2005.04.05.16.43.30;	author athomps;	state Exp;
branches;
next	3.3;

3.3
date	2005.04.02.00.37.56;	author athomps;	state Exp;
branches;
next	3.2;

3.2
date	2004.12.16.23.40.44;	author athomps;	state dead;
branches
	3.2.2.1;
next	3.1;

3.1
date	2004.12.16.23.07.39;	author athomps;	state Exp;
branches;
next	;

3.2.2.1
date	2004.12.16.23.59.24;	author athomps;	state Exp;
branches;
next	3.2.2.2;

3.2.2.2
date	2004.12.22.22.59.07;	author athomps;	state Exp;
branches;
next	3.2.2.3;

3.2.2.3
date	2005.01.11.22.49.41;	author athomps;	state Exp;
branches;
next	3.2.2.4;

3.2.2.4
date	2005.01.14.22.56.02;	author athomps;	state Exp;
branches;
next	3.2.2.5;

3.2.2.5
date	2005.01.29.01.44.20;	author athomps;	state Exp;
branches;
next	3.2.2.6;

3.2.2.6
date	2005.01.31.04.22.50;	author athomps;	state Exp;
branches;
next	;


desc
@@


4.1
log
@Fixed glitch in header.
@
text
@//-----------------------------------------------------------------------
//
//   G R A S P
//   ____________
//   \           \
//    \ General   \
//     \ Reactive  \
//      \ Atomistic \
//       \ Simulation\
//        \ Program   \
//         \___________\
//
//    Timestamp: April 1, 2005
//    Version: 4.0
//
//    Primary Author: Aidan P. Thompson
//
//    e-mail: athomps@@sandia.gov
//   
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
//    for the United States Department of Energy under contract
//    No. DE-AC04-94AL-85000.
//
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
//----------------------------------------------------------------------- 
/////:EOH~
extern struct {
double ch[ReaxParams::nat];
} FORTRAN(cbkch,CBKCH);

extern struct {
  double chi[ReaxParams::nsort];
  double eta[ReaxParams::nsort];
  double gam[ReaxParams::nsort];
} FORTRAN(cbkchb,CBKCHB);
@


4.0
log
@This is version 4.0
@
text
@d43 1
a43 1
//------------------------------------------------------------------------ 
@


3.3
log
@Merged REAX version with main version
@
text
@d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


3.2
log
@Removed files inadvertently added to main branch
@
text
@d1 28
d30 1
a30 1
  double ch[ReaxParams::nat];
d33 5
@


3.2.2.1
log
@I hope this is adds all the REAX files to the REAXFF branch
@
text
@@


3.2.2.2
log
@Completed prototype of parallel ReaxFF in GRASP, including charge equilibration
@
text
@a4 24
extern struct {
  double ech;
  double syscha;
  double chisys;
  double vfieldx;
  double vfield;
  double vfieldz;
  double nmcharge;
  double ioldchg;
} FORTRAN(cbkcha,CBKCHA);

extern struct {
  double chi[ReaxParams::nsort];
  double eta[ReaxParams::nsort];
  double gam[ReaxParams::nsort];
} FORTRAN(cbkchb,CBKCHB);

extern struct {
  double xvelec[ReaxParams::neem][ReaxParams::neem];
  double xvelect[ReaxParams::neem][ReaxParams::neem];
  double xvt[ReaxParams::neem][ReaxParams::neem];
  double xmortr[ReaxParams::neem][ReaxParams::neem];
  double chgold[ReaxParams::neem];
} FORTRAN(cbkm,CBKM);
@


3.2.2.3
log
@Modified use of nat to allow treatment of big parallel systems.
@
text
@d2 1
a2 1
  double ch[ReaxParams::nattot];
@


3.2.2.4
log
@Fixed bug in reax_cbkch.h, switched neem to nat
@
text
@d25 1
a25 1
  double xvt[ReaxParams::nat][ReaxParams::neem];
@


3.2.2.5
log
@Cleaned up charge eequilibration, removed some FORTRAN allocations
@
text
@a0 5
/* extern struct { */
/*   double ch[ReaxParams::nattot]; */
/* } FORTRAN(cbkch,CBKCH); */


d2 1
a2 1
double ch[ReaxParams::nat];
d5 10
a14 10
/* extern struct { */
/*   double ech; */
/*   double syscha; */
/*   double chisys; */
/*   double vfieldx; */
/*   double vfield; */
/*   double vfieldz; */
/*   double nmcharge; */
/*   double ioldchg; */
/* } FORTRAN(cbkcha,CBKCHA); */
d22 7
a28 7
/* extern struct { */
/*   double xvelec[ReaxParams::neem][ReaxParams::neem]; */
/*   double xvelect[ReaxParams::neem][ReaxParams::neem]; */
/*   double xvt[ReaxParams::nat][ReaxParams::neem]; */
/*   double xmortr[ReaxParams::neem][ReaxParams::neem]; */
/*   double chgold[ReaxParams::neem]; */
/* } FORTRAN(cbkm,CBKM); */
@


3.2.2.6
log
@Streamlined memory for global and local data
@
text
@d1 5
d10 11
d26 8
@


3.1
log
@Finally, this is the REAXFF branch, first pass
@
text
@@

