head	4.9;
access;
symbols
	ReverseComm_branch:4.6.0.2
	ADTools_branch:4.5.0.2
	Monaco_Aidan:4.3.0.6
	Root-of-Monaco_Aidan:4.3
	PPPM_Crozier2:4.3.0.4
	PPPM_Crozier:4.3
	Root-of-PPPM_Crozier:4.3
	Monaco:4.3.0.2
	PreMonaco:4.3
	Recovery-2004-04-12:4.0
	BRANCH:4.1.0.4
	PMONACO:4.1.0.2
	ROOT:4.1
	initial:4.0.0.2
	pmonaco:4.0
	Version_4_0:4.0
	Version_3_0:3.0
	BeforeREAXMerge:3.0
	REAX-2:3.0
	P_MonacoSource:3.0.0.6
	GraspSource:3.0
	P_Monaco:3.0.0.4
	InitialGrasp:3.0
	REAXFF:3.0.0.2
	premerge_cjkimme_version:3.0
	CRAY:2.11.0.2
	cjkimme_version_merge_from_trunk_1:2.6.2.1
	cjkimme_version:2.6.0.2;
locks; strict;
comment	@ * @;


4.9
date	2008.02.04.22.24.59;	author athomps;	state Exp;
branches;
next	4.8;

4.8
date	2007.09.05.22.43.34;	author athomps;	state Exp;
branches;
next	4.7;

4.7
date	2007.05.15.19.30.48;	author athomps;	state Exp;
branches;
next	4.6;

4.6
date	2006.08.26.02.04.29;	author athomps;	state Exp;
branches;
next	4.5;

4.5
date	2005.10.11.01.40.34;	author athomps;	state Exp;
branches;
next	4.4;

4.4
date	2005.09.02.23.03.05;	author athomps;	state Exp;
branches;
next	4.3;

4.3
date	2005.05.03.16.28.27;	author athomps;	state Exp;
branches;
next	4.2;

4.2
date	2005.05.02.20.13.38;	author athomps;	state Exp;
branches;
next	4.1;

4.1
date	2005.04.12.22.26.04;	author saubry;	state Exp;
branches;
next	4.0;

4.0
date	2005.04.05.16.43.30;	author athomps;	state Exp;
branches;
next	3.1;

3.1
date	2005.04.02.00.37.56;	author athomps;	state Exp;
branches;
next	3.0;

3.0
date	2004.09.22.17.56.49;	author athomps;	state Exp;
branches;
next	2.11;

2.11
date	2004.07.26.15.52.18;	author athomps;	state Exp;
branches;
next	2.10;

2.10
date	2004.07.21.17.46.50;	author athomps;	state Exp;
branches;
next	2.9;

2.9
date	2004.07.13.21.21.16;	author athomps;	state Exp;
branches;
next	2.8;

2.8
date	2004.05.20.22.11.34;	author athomps;	state Exp;
branches;
next	2.7;

2.7
date	2004.03.20.00.15.39;	author athomps;	state Exp;
branches;
next	2.6;

2.6
date	2004.01.09.19.01.08;	author athomps;	state Exp;
branches
	2.6.2.1;
next	2.5;

2.5
date	2003.11.26.22.51.14;	author athomps;	state Exp;
branches;
next	2.4;

2.4
date	2003.10.31.20.20.44;	author athomps;	state Exp;
branches;
next	2.3;

2.3
date	2003.10.20.22.05.45;	author athomps;	state Exp;
branches;
next	2.2;

2.2
date	2003.10.04.02.46.53;	author athomps;	state Exp;
branches;
next	2.1;

2.1
date	2003.06.17.19.08.11;	author athomps;	state Exp;
branches;
next	2.0;

2.0
date	2003.04.24.17.19.15;	author athomps;	state Exp;
branches;
next	;

2.6.2.1
date	2004.09.13.23.00.09;	author cjkimme;	state Exp;
branches;
next	;


desc
@@


4.9
log
@Added thermostat/barostat extended variables to restart file.
@
text
@//-----------------------------------------------------------------------
//
//   G R A S P
//   ____________
//   \           \
//    \ General   \
//     \ Reactive  \
//      \ Atomistic \
//       \ Simulation\
//        \ Program   \
//         \___________\
//
//    Timestamp: April 1, 2005
//    Version: 4.0
//
//    Primary Author: Aidan P. Thompson
//
//    e-mail: athomps@@sandia.gov
//   
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
//    for the United States Department of Energy under contract
//    No. DE-AC04-94AL-85000.
//
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
//----------------------------------------------------------------------- 
/////:EOH~

#ifndef STEPPER_H
#define STEPPER_H

class Stepper {
 public:
  // enum class for ensemble styles
  enum EnsembleStyles {
    ensemble_nve,ensemble_nvt_rescale,ensemble_nvt_nh,
    ensemble_nph_nh,ensemble_npt_nh,
    ensemble_nph_nh_partial,ensemble_npt_nh_partial,
    ensemble_nph_nh_full,ensemble_npt_nh_full};
 private:
  EnsembleStyles ensemble_style;
  double temp_target,temp_final,temp_ramp,temp_window,temp_factor;
  double p_target,p_target_a,p_target_b,p_target_c;
  double rhokt,nkt,vol0,p_nh_dim;
  int temp_freq,temp_skip;
  double t_nh_tau,t_nh_eta,t_nh_etadot;
  double p_nh_tau,p_nh_omega,p_nh_omegadot;
  double p_nh_omega_a,p_nh_omegadot_a;
  double p_nh_omega_b,p_nh_omegadot_b;
  double p_nh_omega_c,p_nh_omegadot_c;
  double p_nh_omega_full[3][3],p_nh_omegadot_full[3][3];
  double deldeform[3][3],deformx[3][3],deformv[3][3];
  double extended_energy;
  double t_nh_drag;
  double p_nh_drag;
  int nsteps;
  bool Lpflag_a,Lpflag_b,Lpflag_c;
  enum {nvirial = 6};
  enum {numextvar = 31};
  double extvarbuf[numextvar];
  bool Lwriteextvar,Lreadextvar;
 public:
  Stepper();
  void Setup(const ParticleList*, const Box*, const double&, Comm*);
  void Run(const int, const double, 
           Box*, ParticleTypeList*, ParticleList*, ForceFieldList*, 
           Output*, FixList*, Comm*);
  void TemperatureControlRescale(ParticleList*, Comm*);
  void Front(const double, Box*, ParticleTypeList*, ParticleList*, ForceFieldList*, 
           FixList*, Comm*);
  void Back(const double, Box*, ParticleTypeList*, ParticleList*, ForceFieldList*, 
           FixList*, Comm*);
  double ComputeExtendedEnergy(const ParticleList*, const Box*);
  void input_temperature_control(const string&);
  void input_pressure_control(const string&);
  void input_temperature_damping(const string&);
  void input_pressure_damping(const string&);
  void input_read_extvar(const string& buf);
  void input_write_extvar(const string& buf);
  double* get_extvar();
  bool get_Lreadextvar() const {return Lreadextvar;};
  bool get_Lwriteextvar()const {return Lwriteextvar;};
  int get_numextvar() const {return numextvar;};
  void update_extvar();
};
  
#endif
@


4.8
log
@Fixed midpoint bug and eliminated all osx_serial_debug warnings (-Wuninitialized, -Wshadow, ...)
@
text
@d76 3
d95 7
@


4.7
log
@Added nose-hoover-full version of pressure control to allow fully flexible fluctuations in box dimensions
@
text
@d82 1
a82 2
  void TemperatureControlRescale(const double&, const double&, const double&,
   ParticleList*, Comm*);
@


4.6
log
@Added damping constant commands for Nose-Hoover barostats and thermostats
@
text
@d69 1
@


4.5
log
@Added some new barostats and thermostats.
@
text
@d70 2
d77 1
a77 1
  void Setup(const ParticleList*, const Box*, Comm*);
d90 2
@


4.4
log
@Added ramp variants for thermostats
@
text
@d55 2
a56 1
    ensemble_nph_nh_anisotropic,ensemble_npt_nh_anisotropic};
d60 2
a61 1
  double p_target,p_target_a,p_target_b,p_target_c,p_ref0;
d68 1
d72 1
@


4.3
log
@Fixed glitch in header.
@
text
@d58 1
a58 1
  double temp_target,temp_window,temp_factor;
d67 1
@


4.2
log
@Recovered from corruption on April 12, 1005
@
text
@d43 1
a43 1
//------------------------------------------------------------------------ 
@


4.1
log
@Create new branch.
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


4.0
log
@This is version 4.0
@
text
@d13 2
a14 2
//    Timestamp: April 1, 2005
//    Version: 4.0
d16 1
a16 1
//    Primary Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2005) Sandia National Laboratories
//
//    Sandia National Laboratories is a multiprogram laboratory 
//    operated by Sandia Corporation, a Lockheed Martin company,
a26 16
//    Under the terms of Contract DE-AC04-94AL85000 with Sandia 
//    Corporation, the U.S. Government retains certain rights in 
//    this software.
//
//    This software is distributed under the terms of the GNU Public 
//    License (GPL). For a copy of the GPL see the file 
//    Grasp/Documentation/LICENSE or visit the GNU website at 
//    http://www.gnu.org/copyleft/gpl.html. Briefly, the GPL 
//    entitles you to use the software, modify it and redistribute it. 
//    The main thing you can not do is apply any other licensing 
//    terms to the software. Also, if any part of this sofware is added 
//    to other software, then that software must also be released under 
//    the GPL.
//
//    This software comes with no warranty of any kind. 
//
@


3.1
log
@Merged REAX version with main version
@
text
@d16 1
a16 1
//    Author: Aidan P. Thompson
d20 4
a23 4
//    Copyright (2004) Sandia National Laboratories
//   
//    Sandia is a multiprogram laboratory operated by 
//    Sandia Corporation, a Lockheed Martin company,
d27 16
@


3.0
log
@Created a new version number, GRASP 3.0
@
text
@d13 2
a14 2
//    Timestamp: September 22, 2004
//    Version: 3.0
@


2.11
log
@Updated header
@
text
@d13 2
a14 1
//    Timestamp: July 26, 2004
@


2.10
log
@Added anisotropic style to pressure control,
and included in Tersoff example testp.
@
text
@d13 1
a13 1
//    Timestamp: 1 March 2004
@


2.9
log
@Added NPT ensemble
@
text
@d37 2
a38 1
    ensemble_nph_nh,ensemble_npt_nh};
d42 1
a42 1
  double p_target,p_ref0;
d46 3
d50 1
@


2.8
log
@Added NPT ensemble. Noy sure if it is working
yet, and need to update documentation.
@
text
@d41 1
a41 1
  double p_target;
d43 2
a44 2
  double t_nh_freq,t_nh_eta,t_nh_etadot;
  double p_nh_freq,p_nh_omega,p_nh_omegadot;
d48 1
a48 1
  void Setup(Comm*);
@


2.7
log
@Various
@
text
@d34 4
a37 3
  // enum class for temperature control styles
  enum TempControlStyles {
    temp_control_none,temp_control_rescale,temp_control_nose_hoover};
d39 1
a39 1
  TempControlStyles temp_control_style;
d41 1
a41 1
  double pressa_target,pressb_target,pressc_target;
d43 2
a44 1
  double nose_hoover_freq,nose_hoover_eta,nose_hoover_etadot;
d58 1
a58 1
  void ComputeExtendedEnergy(ParticleList*);
d60 1
@


2.6
log
@Added a Perl script to Header.pl to prepend a header contained in
header.txt to source fiels, using

Header.pl *.pl *.cpp *.h M*[^~]
@
text
@d13 1
a13 1
//    Timestamp: 8 January 2004
@


2.6.2.1
log
@Committing merge of main trunk onto branch cjkimme_version.
@
text
@d13 1
a13 1
//    Timestamp: July 26, 2004
d34 3
a36 5
  // enum class for ensemble styles
  enum EnsembleStyles {
    ensemble_nve,ensemble_nvt_rescale,ensemble_nvt_nh,
    ensemble_nph_nh,ensemble_npt_nh,
    ensemble_nph_nh_anisotropic,ensemble_npt_nh_anisotropic};
d38 1
a38 1
  EnsembleStyles ensemble_style;
d40 1
a40 1
  double p_target,p_target_a,p_target_b,p_target_c,p_ref0;
d42 1
a42 5
  double t_nh_tau,t_nh_eta,t_nh_etadot;
  double p_nh_tau,p_nh_omega,p_nh_omegadot;
  double p_nh_omega_a,p_nh_omegadot_a;
  double p_nh_omega_b,p_nh_omegadot_b;
  double p_nh_omega_c,p_nh_omegadot_c;
a43 1
  bool Lpflag_a,Lpflag_b,Lpflag_c;
d46 1
a46 1
  void Setup(const ParticleList*, const Box*, Comm*);
d56 1
a56 1
  double ComputeExtendedEnergy(const ParticleList*, const Box*);
a57 1
  void input_pressure_control(const string&);
@


2.5
log
@Gutted the class Input, so that it is now a generic wrapper.
All the detailed treatment of each command is pushed down into
the relevant classes.
@
text
@d1 28
@


2.4
log
@Removed Thermo class
@
text
@a9 2
  double timestep;
  int nsteps;
d18 3
a20 2
  void Setup(const Input*, Comm*);
  void Run(Box*, ParticleTypeList*, ParticleList*, ForceFieldList*, 
d24 1
a24 1
  void Front(Box*, ParticleTypeList*, ParticleList*, ForceFieldList*, 
d26 1
a26 1
  void Back(Box*, ParticleTypeList*, ParticleList*, ForceFieldList*, 
d29 1
@


2.3
log
@Cleaned up various things, especially treatment of constants
and input strings.
@
text
@d22 1
a22 1
           Thermo*, Output*, Comm*);
d26 1
a26 1
           Thermo*, Output*, Comm*);
d28 1
a28 1
           Thermo*, Output*, Comm*);
@


2.2
log
@Fized up the output a little mor.
Standardized the method for treating enum option lists
Created the Constants class
@
text
@d15 3
a17 2
  int temp_freq;

a22 1
  void TemperatureControl(const int&, ParticleList*, Comm*);
d25 5
@


2.1
log
@This is a lot of stuff.  Basically, the code is now parallel,
but it is only tested for the force field twobody_lj_cut.

The parallelization scheme is based on Steve Plimptons Comm class.
@
text
@d6 3
a8 1
  enum temp_control_styles {temp_control_none,temp_control_rescale,temp_control_nose_hoover};
d12 1
a12 1
  int temp_control_style;
@


2.0
log
@*** empty log message ***
@
text
@d16 2
a17 1
  void Setup(const Input*);
d19 2
a20 2
           Thermo*, Output*);
  void TemperatureControl(const int&, ParticleList*);
d22 1
a22 1
   ParticleList*);
@

